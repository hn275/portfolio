---
import { ViewTransitions } from "astro:transitions";
import Nav from "../components/nav.svelte";
import type { TransitionAnimationPair, TransitionAnimationValue } from "astro";

type LayoutProps = {
    header: string;
};
const { header } = Astro.props as LayoutProps;

const contentAnimation: TransitionAnimationPair = {
    new: {
        name: "contentIn",
        delay: "0.1s",
        duration: 200,
        easing: "linear",
    },
    old: {
        name: "contentOut",
        delay: "0s",
        duration: 200,
        easing: "linear",
    },
};
const contentFade: TransitionAnimationValue = {
    forwards: contentAnimation,
    backwards: contentAnimation,
};

const headerAnimation: TransitionAnimationPair = {
    new: {
        name: "headerIn",
        duration: 200,
    },
    old: {
        name: "headerOut",
        duration: 200,
    },
};

const headerSlide: TransitionAnimationValue = {
    forwards: headerAnimation,
    backwards: headerAnimation,
};
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Hal Nguyen</title>
        <ViewTransitions />
    </head>
    <body>
        <Nav client:load />
        <header class="" transition:animate={headerSlide}>
            <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
                <h1 class="text-3xl font-bold tracking-tight text-accent-200">
                    {header}
                </h1>
            </div>
        </header>
        <main transition:animate={contentFade}>
            <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
                <slot />
            </div>
        </main>
        <style>
            body {
                @apply bg-slate-950 text-slate-50;
            }

            @keyframes contentIn {
                0% {
                    opacity: 0;
                    transform: translateY(20px);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0px);
                }
            }

            @keyframes contentOut {
                0% {
                    opacity: 1;
                }
                100% {
                    opacity: 0;
                }
            }

            @keyframes headerIn {
                0% {
                    opacity: 0;
                    transform: translateX(20px);
                }
                100% {
                    opacity: 1;
                    transform: translateX(0px);
                }
            }

            @keyframes headerOut {
                0% {
                    opacity: 1;
                }
                100% {
                    opacity: 0;
                }
            }
        </style>
    </body>
</html>
